events {
  worker_connections 1024;
}

http {
  default_type  text/html;
  lua_package_path '/usr/local/openresty/lualib/?.lua;;';
  resolver 8.8.8.8;

  server {
    listen       80;
    server_name  localhost;

    location /auth/ {
      proxy_pass          http://keycloak:8080/auth/;
      proxy_set_header    Host               $host;
      proxy_set_header    X-Real-IP          $remote_addr;
      proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Host   $host;
      proxy_set_header    X-Forwarded-Server $host;
      proxy_set_header    X-Forwarded-Port   $server_port;
      proxy_set_header    X-Forwarded-Proto  $scheme;
    }

    location / {
      access_by_lua '
              local opts = {
                redirect_uri_path = "/app",
                discovery = "http://192.168.0.14:8080/auth/realms/master/.well-known/openid-configuration",
                client_id = "test",
                client_secret = "0172fe30-312a-4dbe-ac55-c32638c2625c",
                ssl_verify = "no",
                redirect_uri_scheme = "http",
                logout_path = "/logout",
                redirect_after_logout_uri = "https://keycloak:8080/auth/realms/internal_applications/protocol/openid-connect/logout",
                redirect_after_logout_with_id_token_hint = false,
                session_contents = {id_token=true}
              }
              local res, err = require("resty.openidc").authenticate(opts)
              if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
              end
          ';
      proxy_pass http://app-rest-node:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}